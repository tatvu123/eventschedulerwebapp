const CACHE_NAME=`cache-v${__BUILD_DATE__}`,ASSETS=["/","/index.html","/style.css","/script.js","/dist/bundle.js","https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css","https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap"];async function handlePendingTasks(){(await self.clients.matchAll()).forEach((e=>e.postMessage({type:"SYNC_PENDING_TASKS"})))}async function processPendingTasks(){const e=(await indexedDB.open("EventSchedulerDB")).transaction(["pendingTasks"],"readwrite").objectStore("pendingTasks"),t=await e.getAll();for(const s of t)try{"add"===s.action?await firebase.firestore().collection("events").add(s.data):"delete"===s.action&&await firebase.firestore().collection("events").doc(s.data.id).delete(),await e.delete(s.id)}catch(e){console.error("Sync failed:",e)}}self.addEventListener("install",(e=>{self.skipWaiting(),e.waitUntil(caches.open(CACHE_NAME).then((e=>e.addAll(["/",new Request("index.html",{cache:"reload"}),"style.css","script.js"]).catch(console.error))))})),self.addEventListener("activate",(e=>{e.waitUntil(caches.keys().then((e=>Promise.all(e.map((e=>{if(e.startsWith("event-scheduler-")&&e!==CACHE_NAME)return caches.delete(e)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(e=>{e.respondWith(caches.match(e.request).then((t=>t||fetch(e.request).then((t=>caches.open(CACHE_NAME).then((s=>(s.put(e.request.url,t.clone()),t))))))).catch((()=>caches.match("/index.html"))))})),self.addEventListener("sync",(e=>{"pending-tasks"===e.tag&&e.waitUntil(handlePendingTasks())})),self.addEventListener("message",(e=>{"SYNC_PENDING_TASKS"===e.data.type&&e.waitUntil(processPendingTasks())}));