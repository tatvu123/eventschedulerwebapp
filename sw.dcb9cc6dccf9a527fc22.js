(self.webpackChunkeventschedulerwebapp=self.webpackChunkeventschedulerwebapp||[]).push([[725],{495:()=>{const e="event-scheduler-1740450997046";self.addEventListener("install",(t=>{self.skipWaiting(),t.waitUntil(caches.open(e).then((e=>e.addAll(["/",new Request("index.html",{cache:"reload"}),"style.css","script.js"]).catch(console.error))))})),self.addEventListener("activate",(t=>{t.waitUntil(caches.keys().then((t=>Promise.all(t.map((t=>{if(t.startsWith("event-scheduler-")&&t!==e)return caches.delete(t)}))))).then((()=>self.clients.claim())))})),self.addEventListener("fetch",(t=>{t.respondWith(caches.match(t.request).then((a=>a||fetch(t.request).then((a=>caches.open(e).then((e=>(e.put(t.request.url,a.clone()),a))))))).catch((()=>caches.match("/index.html"))))})),self.addEventListener("sync",(e=>{"pending-tasks"===e.tag&&e.waitUntil(async function(){(await self.clients.matchAll()).forEach((e=>e.postMessage({type:"SYNC_PENDING_TASKS"})))}())})),self.addEventListener("message",(e=>{"SYNC_PENDING_TASKS"===e.data.type&&e.waitUntil(async function(){const e=(await indexedDB.open("EventSchedulerDB")).transaction(["pendingTasks"],"readwrite").objectStore("pendingTasks"),t=await e.getAll();for(const a of t)try{"add"===a.action?await firebase.firestore().collection("events").add(a.data):"delete"===a.action&&await firebase.firestore().collection("events").doc(a.data.id).delete(),await e.delete(a.id)}catch(e){console.error("Sync failed:",e)}}())}))}},e=>{e(e.s=495)}]);